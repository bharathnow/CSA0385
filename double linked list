#include<stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node*next;
    struct node*prev;
};
void insert(struct node**head_ref,int new_data)
{
    struct node* n = (struct node*)malloc(sizeof(struct node));
    n-> data=new_data;
    n-> next=*head_ref;
    n-> prev=NULL;
    if (*head_ref) (*head_ref)->prev=n;
    *head_ref=n;
}
void list(struct node* node){
    while(node){
        printf("%d<->",node->data);
        node=node->next;
    }
    printf("NULL\n");
}
void rev_list(struct node*node)
{
if(!node)
{
    printf("NULL\n");
    return;
}
while(node->next) node=node->next;
while(node){
     printf("%d<->",node->data);
        node=node->prev;
    }
    printf("NULL\n");
}
int main()
{
    struct node*head=NULL;
    insert(&head ,4);
    insert(&head ,3);
    insert(&head ,2);
    insert(&head ,1);
    printf("linked state is \n");
    list(head);
    printf("DOUBLE IS \n");
    rev_list(head);
    return 0;
}
